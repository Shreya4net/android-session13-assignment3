package com.dce.puja.musicplayer;


import android.app.Service;
import android.content.ContentResolver;
import android.content.Intent;
import android.database.Cursor;
import android.media.MediaPlayer;
import android.net.Uri;
import android.os.Binder;
import android.os.IBinder;
import android.provider.MediaStore;
import android.util.Log;

import java.util.ArrayList;

/**
 * Created by Devendra on 4/19/2017.




 public class MusicPlay extends Service {
   MusicPlay service = new MusicPlay();

 MediaPlayer mMediaPlayer;
 MusicListener listener;
 int index = 0;
 public static ArrayList<Songs> arrayList = new ArrayList<Songs>();

 public void registerActivity(MusicListener act) {
 listener =  act;
 }


 public interface  MusicListener{
 public void songCompleted();
 }

 public MusicPlay() {
 }

 @Override
 public void onCreate() { // plesae ill get bindService...
 super.onCreate();
 getMusic(); // all the songs from my sdcard or mobile...
 }

 // Media Scanner is running...

 //creation of a pointer and return it to activity
 public class MusicBinder extends Binder{
 public MusicPlay getInstace(){
 return MusicPlay.this;
 }
 }

 @Override
 public IBinder onBind(Intent intent) { // bindService...
 return new MusicBinder();
 }

 public void next() {
 index++;
 play();
 }



 public void frow(){
 }

 public void previos() {
 index--;
 play();
 }

 public void pause(){
 if (mMediaPlayer != null) {
 mMediaPlayer.pause();

 }
 }

 public void stop(){
 if (mMediaPlayer != null) {
 mMediaPlayer.stop();
 }
 }
 public void play() {
 try {
 if (mMediaPlayer != null) {
 mMediaPlayer.stop();
 mMediaPlayer.release();
 mMediaPlayer = null;
 }

 Log.i("Cover", "path==" +  getCoverArtPath(arrayList.get(index).getAlbum()));
 mMediaPlayer = new MediaPlayer();
 //mMediaPlayer.reset();
 mMediaPlayer.setDataSource(arrayList.get(index).getSongID());
 mMediaPlayer.prepare();
 mMediaPlayer.start();

 //Bitmap bm = BitmapFactory.decodeFile(getCoverArtPath(arrayList.get(index).getAlbum()));
 ///ImageView image = (ImageView) findViewById(R.id.imageView);
 //image.setImageBitmap(bm);
 } catch (Exception e) {
 e.printStackTrace();
 }
 }

 void getMusic() {
 ContentResolver contentResolver = getContentResolver();


 Uri songUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;
 Cursor songCursor = contentResolver.query(songUri, null, null, null, null);

 /* contentResolver.notifyChange(songUri, new ContentObserver() {
 @Override
 public void onChange(boolean selfChange) {
 super.onChange(selfChange);
 //reload...
 }
 };
 */

if (songCursor != null && songCursor.moveToFirst()) {
        int songId = songCursor.getColumnIndex(MediaStore.Audio.Media.DATA);
        int songTitle = songCursor.getColumnIndex(MediaStore.Audio.Media.TITLE);

        do {
        String currentId = songCursor.getString(songId);
        String currentTitle = songCursor.getString(songTitle);

        int albumIdColumn = songCursor.getColumnIndex
        (MediaStore.Audio.Media.ALBUM_ID);

        long albumId = songCursor.getLong(albumIdColumn);
        arrayList.add(new Songs(currentId, currentTitle, albumId));
        } while (songCursor.moveToNext());
        }

        sendBroadcast(new Intent("a.b.co.d.q"));
        }


        String getCoverArtPath(long albumId) {
        Cursor albumCursor =  getContentResolver().query(
        MediaStore.Audio.Albums.EXTERNAL_CONTENT_URI,
        new String[]{MediaStore.Audio.Albums.ALBUM_ART},
        MediaStore.Audio.Albums._ID + " = ?",
        new String[]{Long.toString(albumId)},
        null
        );
        boolean queryResult = albumCursor.moveToFirst();
        String result = null;
        if (queryResult) {
        result = albumCursor.getString(0);
        }
        albumCursor.close();
        return result;
        }



        }







